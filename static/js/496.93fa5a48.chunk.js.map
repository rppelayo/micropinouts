{"version":3,"file":"static/js/496.93fa5a48.chunk.js","mappings":"iSAEA,MAEMA,E,OAAWC,EAAMC,OAAO,CAC5BC,QAHmB,6CAInBC,QAAS,CACP,eAAgB,sBAKpBJ,EAASK,aAAaC,QAAQC,IAAKC,IACjC,MAAMC,EAAQC,aAAaC,QAAQ,cAInC,OAHIF,IACFD,EAAOJ,QAAQQ,cAAa,UAAAC,OAAaJ,IAEpCD,IAIF,MAAMM,EAAY,CACvBC,MAAOA,CAACC,EAAUC,IAChBjB,EAASkB,KAAK,eAAgB,CAAEF,WAAUC,aAE5CE,OAAQA,KACNT,aAAaU,WAAW,cACxBV,aAAaU,WAAW,eAKfC,EAAiB,CAC5BC,OAAQA,IAAMtB,EAASuB,IAAI,iBAC3BC,QAAUC,GAAOzB,EAASuB,IAAI,iBAADV,OAAkBY,IAC/CC,cAAgBC,GAAa3B,EAASuB,IAAI,uCAADV,OAAwCc,IACjFzB,OAAS0B,GAAc5B,EAASkB,KAAK,gBAAiBU,GACtDC,OAAQA,CAACJ,EAAIG,IAAc5B,EAAS8B,IAAI,iBAADjB,OAAkBY,GAAMG,GAC/DG,OAASN,GAAOzB,EAAS+B,OAAO,iBAADlB,OAAkBY,IACjDO,QAASA,CAACP,EAAIQ,IAAcjC,EAAS8B,IAAI,iBAADjB,OAAkBY,EAAE,YAAY,CAAEQ,cAC1EC,QAAUT,GAAOzB,EAASuB,IAAI,iBAADV,OAAkBY,EAAE,UACjDU,mBAAoBA,CAACP,EAAWQ,IAC9BpC,EAASkB,KAAK,8BAA+B,CAAEU,YAAWQ,kBAUjDC,EAAuB,CAClCf,OAAQA,IAAMtB,EAASuB,IAAI,wBAC3BC,QAAUC,GAAOzB,EAASuB,IAAI,uBAADV,OAAwBY,IACrDO,QAASA,CAACP,EAAIQ,IAAcjC,EAAS8B,IAAI,uBAADjB,OAAwBY,EAAE,YAAY,CAAEQ,cAChFJ,OAAQA,CAACJ,EAAIa,IAAStC,EAAS8B,IAAI,uBAADjB,OAAwBY,GAAMa,GAChEP,OAASN,GAAOzB,EAAS+B,OAAO,uBAADlB,OAAwBY,KAI5Cc,EAAoB,CAC/BjB,OAAQA,IAAMtB,EAASuB,IAAI,qBAC3BrB,OAASsC,GAAcxC,EAASkB,KAAK,oBAAqBsB,IAI/CC,EAAqB,CAChCnB,OAAQA,IAAMtB,EAASuB,IAAI,sBAIhBmB,EAAiB,CAC5BC,eAAiBC,GACf5C,EAASkB,KAAK,yBAA0B0B,EAAU,CAChDxC,QAAS,CACP,eAAgB,yBAGtByC,iBAAkBA,IAAM7C,EAASkB,KAAK,8BAI3B4B,EAAsB,CACjCC,SAAWT,GAAStC,EAASkB,KAAK,+BAAgCoB,G","sources":["services/adminApi.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:8080/micropinouts/api-php';\r\n\r\nconst adminApi = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add token to requests\r\nadminApi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('adminToken');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Admin Authentication\r\nexport const adminAuth = {\r\n  login: (username, password) => \r\n    adminApi.post('/admin/login', { username, password }),\r\n  \r\n  logout: () => {\r\n    localStorage.removeItem('adminToken');\r\n    localStorage.removeItem('adminUser');\r\n  }\r\n};\r\n\r\n// Admin Boards API\r\nexport const adminBoardsAPI = {\r\n  getAll: () => adminApi.get('/admin/boards'),\r\n  getById: (id) => adminApi.get(`/admin/boards/${id}`),\r\n  getByCategory: (category) => adminApi.get(`/admin/wiring-guide/boards?category=${category}`),\r\n  create: (boardData) => adminApi.post('/admin/boards', boardData),\r\n  update: (id, boardData) => adminApi.put(`/admin/boards/${id}`, boardData),\r\n  delete: (id) => adminApi.delete(`/admin/boards/${id}`),\r\n  publish: (id, published) => adminApi.put(`/admin/boards/${id}/publish`, { published }),\r\n  getPins: (id) => adminApi.get(`/admin/boards/${id}/pins`),\r\n  createFromFritzing: (boardData, fritzingData) => \r\n    adminApi.post('/admin/boards/from-fritzing', { boardData, fritzingData })\r\n};\r\n\r\n// Admin Pins API\r\nexport const adminPinsAPI = {\r\n  update: (id, pinData) => adminApi.put(`/admin/pins/${id}`, pinData),\r\n  delete: (id) => adminApi.delete(`/admin/pins/${id}`)\r\n};\r\n\r\n// Admin Wiring Guides API (plural - for managing existing guides)\r\nexport const adminWiringGuidesAPI = {\r\n  getAll: () => adminApi.get('/admin/wiring-guides'),\r\n  getById: (id) => adminApi.get(`/admin/wiring-guide/${id}`),\r\n  publish: (id, published) => adminApi.put(`/admin/wiring-guide/${id}/publish`, { published }),\r\n  update: (id, data) => adminApi.put(`/admin/wiring-guide/${id}`, data),\r\n  delete: (id) => adminApi.delete(`/admin/wiring-guide/${id}`)\r\n};\r\n\r\n// Admin Pin Groups API\r\nexport const adminPinGroupsAPI = {\r\n  getAll: () => adminApi.get('/admin/pin-groups'),\r\n  create: (groupData) => adminApi.post('/admin/pin-groups', groupData)\r\n};\r\n\r\n// Admin Categories API\r\nexport const adminCategoriesAPI = {\r\n  getAll: () => adminApi.get('/admin/categories')\r\n};\r\n\r\n// Admin Upload API\r\nexport const adminUploadAPI = {\r\n  uploadFritzing: (formData) => \r\n    adminApi.post('/admin/upload-fritzing', formData, {\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data',\r\n      },\r\n    }),\r\n  testFritzingData: () => adminApi.post('/admin/test-fritzing-data')\r\n};\r\n\r\n// Admin Wiring Guide API (singular - for generating new guides)\r\nexport const adminWiringGuideAPI = {\r\n  generate: (data) => adminApi.post('/admin/wiring-guide/generate', data)\r\n};\r\n\r\nexport default adminApi;"],"names":["adminApi","axios","create","baseURL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","concat","adminAuth","login","username","password","post","logout","removeItem","adminBoardsAPI","getAll","get","getById","id","getByCategory","category","boardData","update","put","delete","publish","published","getPins","createFromFritzing","fritzingData","adminWiringGuidesAPI","data","adminPinGroupsAPI","groupData","adminCategoriesAPI","adminUploadAPI","uploadFritzing","formData","testFritzingData","adminWiringGuideAPI","generate"],"sourceRoot":""}